{
  "defectsList" : [ {
    "title" : "Product defects",
    "status" : "FAILED",
    "defects" : [ {
      "uid" : "fa44151358cc1fec",
      "failure" : {
        "message" : "AssertionError: Incorrect data was found in captured results. See mismatches in attached detailes.\nassert <function is_pattern_data_according_to_page at 0x7f9dd6e78938>({'address1': '', 'address2': '', 'bio': '', 'city': '', ...}, {'company': 'hire-tester.com', 'full': 'Max Pavlov', 'jobtitle': 'Software Tester'})\n +  where <function is_pattern_data_according_to_page at 0x7f9dd6e78938> = comparator.is_pattern_data_according_to_page",
        "stackTrace" : "chromedriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"35dc17a7158f94647a0c46829240c50f\")>\ntest_page = '../data/linkedin/profile_page_max_pavlov.ini'\n\n    @allure.feature('Linkedin patterns')\n    @allure.story('Linkedin user profile pattern. User is not logged in to linkedin')\n    @pytest.mark.parametrize(\"test_page\", config.get_tested_pages_for('linkedin'))\n    def test_profile_ptrn_without_log_in(chromedriver, test_page):\n        \"\"\"\n         As user that is not logged in to linkedin I open some user profiles in browser.\n         Get actual data from result is captured by extension.\n         Read expected results that should be present on the test page from patterns/data/linkedin/profile_page*.ini\n         And check if expected data from the page is present within the captured results.\n    \n        \"\"\"\n        handler = pattern_handler\n        test_page = '..' + config.linkedin_test_data + test_page\n        linkidin = linkidin_profile.LinkidinProfilePage(chromedriver)\n        linkidin_auth = authorization.LinkidinAuthPage(chromedriver)\n        linkidin_auth.logout()\n        linkidin.open(config.read_options_for('linkedin', test_page))\n        time.sleep(3)\n        with allure.step('Read expected result from profile page'):\n            expected = config.read_expected_results_from_file(test_page, 'profile without log in')\n        with allure.step('Read attributes from result is captured by extension'):\n            actual = handler.get_actual_data_from_js_console(chromedriver)\n        print actual\n        with allure.step('Check if captured results contain data expected data'):\n>           assert comparator.is_pattern_data_according_to_page(actual, expected),\\\n                     \"Incorrect data was found in captured results. See mismatches in attached detailes.\"\nE           AssertionError: Incorrect data was found in captured results. See mismatches in attached detailes.\nE           assert <function is_pattern_data_according_to_page at 0x7f9dd6e78938>({'address1': '', 'address2': '', 'bio': '', 'city': '', ...}, {'company': 'hire-tester.com', 'full': 'Max Pavlov', 'jobtitle': 'Software Tester'})\nE            +  where <function is_pattern_data_according_to_page at 0x7f9dd6e78938> = comparator.is_pattern_data_according_to_page\n\ntest_linkedin_pattern.py:66: AssertionError"
      },
      "testCases" : [ {
        "uid" : "b20716cfc4b8f0ee",
        "name" : "test_profile_ptrn_without_log_in[profile_page_max_pavlov.ini]",
        "title" : "Test profile ptrn without log in [profile_page_max_pavlov.ini]",
        "time" : {
          "start" : 1466679924858,
          "stop" : 1466679931544,
          "duration" : 6686
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "1a347da427c691e",
      "failure" : {
        "message" : "AssertionError: Incorrect data was found in captured results. See mismatches in attached detailes.\nassert <function is_pattern_data_according_to_page at 0x7f9dd6e78938>({'address1': '', 'address2': '', 'bio': '', 'city': '', ...}, {'company': 'Test ht', 'full': 'Lin May', 'jobtitle': 'QA Engineer'})\n +  where <function is_pattern_data_according_to_page at 0x7f9dd6e78938> = comparator.is_pattern_data_according_to_page",
        "stackTrace" : "chromedriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"35dc17a7158f94647a0c46829240c50f\")>\ntest_page = '../data/linkedin/profile_page_lin_may.ini'\n\n    @allure.feature('Linkedin patterns')\n    @allure.story('Linkedin user profile pattern. User is not logged in to linkedin')\n    @pytest.mark.parametrize(\"test_page\", config.get_tested_pages_for('linkedin'))\n    def test_profile_ptrn_without_log_in(chromedriver, test_page):\n        \"\"\"\n         As user that is not logged in to linkedin I open some user profiles in browser.\n         Get actual data from result is captured by extension.\n         Read expected results that should be present on the test page from patterns/data/linkedin/profile_page*.ini\n         And check if expected data from the page is present within the captured results.\n    \n        \"\"\"\n        handler = pattern_handler\n        test_page = '..' + config.linkedin_test_data + test_page\n        linkidin = linkidin_profile.LinkidinProfilePage(chromedriver)\n        linkidin_auth = authorization.LinkidinAuthPage(chromedriver)\n        linkidin_auth.logout()\n        linkidin.open(config.read_options_for('linkedin', test_page))\n        time.sleep(3)\n        with allure.step('Read expected result from profile page'):\n            expected = config.read_expected_results_from_file(test_page, 'profile without log in')\n        with allure.step('Read attributes from result is captured by extension'):\n            actual = handler.get_actual_data_from_js_console(chromedriver)\n        print actual\n        with allure.step('Check if captured results contain data expected data'):\n>           assert comparator.is_pattern_data_according_to_page(actual, expected),\\\n                     \"Incorrect data was found in captured results. See mismatches in attached detailes.\"\nE           AssertionError: Incorrect data was found in captured results. See mismatches in attached detailes.\nE           assert <function is_pattern_data_according_to_page at 0x7f9dd6e78938>({'address1': '', 'address2': '', 'bio': '', 'city': '', ...}, {'company': 'Test ht', 'full': 'Lin May', 'jobtitle': 'QA Engineer'})\nE            +  where <function is_pattern_data_according_to_page at 0x7f9dd6e78938> = comparator.is_pattern_data_according_to_page\n\ntest_linkedin_pattern.py:66: AssertionError"
      },
      "testCases" : [ {
        "uid" : "fd14acccc3709e80",
        "name" : "test_profile_ptrn_without_log_in[profile_page_lin_may.ini]",
        "title" : "Test profile ptrn without log in [profile_page_lin_may.ini]",
        "time" : {
          "start" : 1466679931595,
          "stop" : 1466679939742,
          "duration" : 8147
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    } ]
  }, {
    "title" : "Test defects",
    "status" : "BROKEN",
    "defects" : [ ]
  } ]
}