# -*- coding: utf-8 -*-""" Contains logic to analyse difference between data from page and data is parsed by capture """import allurefrom core import pattern_handlerdef is_pattern_data_according_to_page(actual, expected):    """    compares 2 dictionaries by values which keys are present at both dictionaries.    if any attribute value from actual dictionary does not contain the data from expected dictionary    returns false    Also it prints compared attributes and their values to console if mismatches are found    :param actual:    :param expected:    :return: comparation_status    """    assert_text = " \n[ERROR]Page data was incorrectly parsed for next attributes:\n"    keys = expected.keys()    comparation_status = True    for key in keys:        expected_value = pattern_handler.handle_value_to_print(expected[key])        actual_value = pattern_handler.handle_value_to_print(actual[key])        if not (expected_value in actual_value):            assert_text = (assert_text +                           "\n For attribute name: \"" + key +                           "\"\n" + "--"*10 + "\n EXPECTED : \n" +                           "--"*10 + "\n\"" + expected_value +                           "\"\n" + "--"*10 + "\n BUT FOUND : \n" +                           "--"*10 + "\n\"" + actual_value + "\"")            allure.attach('Mismatches in ' + key, ' EXPECTED:\n\"'                          + expected_value + '\"\n\n BUT FOUND:\n\"'                          + actual_value + '\"')            comparation_status = False    if comparation_status is False:        allure.attach('Error detailes', assert_text)        print assert_text    return comparation_status